version: '2'
services:
  webserver:
    build:
      context: .
      dockerfile: Dockerfile-spfy
    image: backend
    ports:
    - "8000:80"
    depends_on:
    - redis
    - blazegraph
    volumes:
    - /datastore

  reactapp:
    build:
      context: .
      dockerfile: Dockerfile-reactapp
    image: reactapp
    ports:
    - "8090:5000"
    depends_on:
    - webserver

  worker:
    build:
      context: .
      dockerfile: Dockerfile-rq
    image: backend-rq
    ports:
    - "9181:9181" #this is for debugging, drop a shell and run rq-dashboard if you need to see jobs
    volumes_from:
    - webserver
    depends_on:
    - webserver

  worker-blazegraph-ids:
    build:
      context: .
      dockerfile: Dockerfile-rq-blazegraph
    image: backend-rq-blazegraph
    volumes_from:
    - webserver
    depends_on:
    - webserver

  worker-priority:
    build:
      context: .
      dockerfile: Dockerfile-rq-priority
    image: backend-rq-priority
    volumes_from:
    - webserver
    depends_on:
    - webserver

  redis:
    image: redis:3.2
    command: redis-server --appendonly yes # for persistance
    volumes:
    - /data

  blazegraph:
    image: superphy/blazegraph:2.1.4-inferencing
    ports:
    - "8080:8080"
    volumes:
    - /var/lib/jetty/
