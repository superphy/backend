[supervisord]
nodaemon=true

[program:rqworkermultiples]
; Point the command to the specific rq command you want to run.
; If you use virtualenv, be sure to point it to
; /path/to/virtualenv/bin/rq
; Also, you probably want to include a config module to configure this
; worker.  For more info on that, see http://python-rq.org/docs/workers/
environment=PATH='%(ENV_PATH)s:/opt/conda/envs/backend/bin'
command=/opt/conda/envs/backend/bin/rq worker -c config phylotyper
process_name=%(program_name)s-%(process_num)s

; If you want to run more than one worker instance, increase this
numprocs=2

; This is the directory from which RQ is ran. Be sure to point this to the
; directory where your source code is importable from
directory=/app

; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM

; These are up to you
autostart=true
autorestart=true

; redirect stdout and stderr for docker logs
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
